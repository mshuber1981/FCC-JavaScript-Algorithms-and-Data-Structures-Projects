{"version":3,"sources":["components/NavBar.js","pages/Home.js","pages/Palindrome.js","pages/RomanNumerals.js","pages/Rot13.js","pages/ValidPhoneNumber.js","pages/CashRegister.js","pages/NotFound.js","components/Routes.js","components/Footer.js","App.js","index.js"],"names":["NavBar","Navbar","collapseOnSelect","bg","variant","expand","fixed","Toggle","aria-controls","Collapse","Nav","exact","to","Link","Home","className","id","href","target","rel","Button","size","Palindrome","useState","input","setInput","validated","setValidated","submitted","setSubmit","palindrome","checkPalindrome","inputCopy","setInputCopy","CardDeck","Card","Body","Title","Text","Form","noValidate","onSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","replace","toLowerCase","split","reverse","join","reset","Group","Label","Control","required","type","placeholder","onChange","value","Feedback","RomanNumberals","romans","setRomans","getNumeral","digit","lowStr","midStr","nextStr","repeat","str","Math","floor","convertToRomans","Rot13","encoded","encode","s","String","fromCharCode","charCodeAt","pattern","ValidPhoneNumber","phoneCheck","setPhoneCheck","test","CashRegister","response","setResponse","register","denom","name","val","Table","responsive","map","item","id1","id2","price","cash","cid","output","status","change","reduce","acc","curr","total","change_arr","round","push","length","checkCashRegister","step","NotFound","Routes","path","RomanNumerals","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e297d472.chunk.js","sourcesContent":["import React from \"react\";\n// https://www.npmjs.com/package/react-router-bootstrap\nimport { LinkContainer } from \"react-router-bootstrap\";\n// https://react-bootstrap.github.io/components/navbar/\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nconst NavBar = () => {\n  return (\n    <header>\n      <Navbar\n        collapseOnSelect\n        bg=\"primary\"\n        variant=\"dark\"\n        expand=\"xl\"\n        fixed=\"top\"\n      >\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav>\n            <LinkContainer exact to=\"/\">\n              <Nav.Link>Home</Nav.Link>\n            </LinkContainer>\n            <LinkContainer exact to=\"/Palindrome-Checker\">\n              <Nav.Link>Palindrome Checker</Nav.Link>\n            </LinkContainer>\n            <LinkContainer exact to=\"/Roman-Numeral-Converter\">\n              <Nav.Link>Roman Numeral Converter</Nav.Link>\n            </LinkContainer>\n            <LinkContainer exact to=\"/ROT13\">\n              <Nav.Link>ROT13</Nav.Link>\n            </LinkContainer>\n            <LinkContainer exact to=\"/Valid-Phone-Number\">\n              <Nav.Link>Valid Phone Number</Nav.Link>\n            </LinkContainer>\n            <LinkContainer exact to=\"/Cash-Register\">\n              <Nav.Link>Cash Register</Nav.Link>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n// https://react-bootstrap.github.io/components/jumbotron/\nimport { Button } from \"react-bootstrap\";\n// https://react-icons.netlify.com/#/\nimport { FaFreeCodeCamp } from \"react-icons/fa\";\n\nconst Home = () => {\n  return (\n    <section className=\"container\">\n      <div id=\"home\" className=\"d-flex flex-column min-vh-100 align-items-center justify-content-center bg-light\">\n        <h1 className=\"display-4\">Welcome!</h1>\n        <p className=\"lead px-2 text-center\">\n          Thanks for checking out my spin on the{\" \"}\n          <a\n            href=\"https://www.freecodecamp.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            freecodecamp.org\n          </a>{\" \"}\n          JavaScript Algorithms and Data Structures Projects.\n        </p>\n        <a\n          href=\"https://www.freecodecamp.org/mshuber1981\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Button size=\"lg\">\n            <FaFreeCodeCamp className=\"mr-2\" /> FCC Profile\n          </Button>\n        </a>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","// https://reactjs.org/docs/hooks-state.html\nimport React, { useState } from \"react\";\n// https://react-bootstrap.github.io/layout/grid/#container\nimport { Card, CardDeck, Form, Button } from \"react-bootstrap\";\n\nconst Palindrome = () => {\n  const [input, setInput] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [submitted, setSubmit] = useState(false);\n  const [palindrome, checkPalindrome] = useState(\"\");\n  const [inputCopy, setInputCopy] = useState(\"\");\n\n  const handleInputChange = (event) => setInput(event.target.value);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n    if (form.checkValidity()) {\n      event.preventDefault();\n      setSubmit(true);\n      checkPalindrome(\n        input.replace(/[\\W_]/g, \"\").toLowerCase() ===\n          input.replace(/[\\W_]/g, \"\").toLowerCase().split(\"\").reverse().join(\"\")\n      );\n      setInputCopy(input);\n      setValidated(false);\n      event.target.reset();\n    }\n  };\n\n  return (\n    <section className=\"container\">\n      <div id=\"palindrome\" className=\"d-flex flex-column min-vh-100 align-items-center justify-content-center bg-light text-center\">\n        <CardDeck>\n          <Card>\n            <Card.Body>\n              <Card.Title>What is a Palindrome?</Card.Title>\n              <Card.Text>\n                A palindrome is a word, number, phrase, or other sequence of\n                characters which reads the same backward as forward.\n              </Card.Text>\n              <a\n                href=\"https://en.wikipedia.org/wiki/Palindrome\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Button variant=\"primary\">Palindrome - Wikipedia</Button>\n              </a>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n\n        <Form\n          className=\"w-100\"\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n        >\n          <Form.Group className=\"align-items-center\">\n            <Form.Label className=\"h4\">Palindrome Checker</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter word to check\"\n              onChange={handleInputChange}\n              className=\"my-3 mx-auto w-75 text-center\"\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter at least one character.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\" className=\"mb-4\">\n            Submit\n          </Button>\n          {!submitted ? null : submitted && !palindrome ? (\n            <h4 className=\"text-danger\">{inputCopy} is not a Palindrome.</h4>\n          ) : (\n            <h4 className=\"text-success\">{inputCopy} is a Palindrome.</h4>\n          )}\n        </Form>\n      </div>\n    </section>\n  );\n};\n\nexport default Palindrome;\n","// https://reactjs.org/docs/hooks-state.html\nimport React, { useState } from \"react\";\n// https://react-bootstrap.github.io/layout/grid/#container\nimport { Card, CardDeck, Form, Button } from \"react-bootstrap\";\n\nconst RomanNumberals = () => {\n  const [input, setInput] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [submitted, setSubmit] = useState(false);\n  const [inputCopy, setInputCopy] = useState(\"\");\n  const [romans, setRomans] = useState(\"\");\n\n  const convertToRomans = (input) => {\n    const getNumeral = (digit, lowStr, midStr, nextStr) => {\n      switch (true) {\n        case digit <= 3:\n          return lowStr.repeat(digit);\n        case digit === 4:\n          return lowStr + midStr;\n        case digit <= 8: // digits 5-8\n          return midStr + lowStr.repeat(digit - 5);\n        default:\n          // digit 9\n          return lowStr + nextStr;\n      }\n    };\n\n    let str = \"\";\n\n    // Thousands\n    str += \"M\".repeat(Math.floor(input / 1000));\n    input %= 1000;\n\n    // Hundreds\n    str += getNumeral(Math.floor(input / 100), \"C\", \"D\", \"M\");\n    input %= 100;\n\n    // Tens\n    str += getNumeral(Math.floor(input / 10), \"X\", \"L\", \"C\");\n    input %= 10;\n\n    // Ones\n    str += getNumeral(input, \"I\", \"V\", \"X\");\n\n    return str;\n  };\n\n  const handleInputChange = (event) => setInput(event.target.value);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n    if (form.checkValidity()) {\n      event.preventDefault();\n      setSubmit(true);\n      setInputCopy(input);\n      setRomans(convertToRomans(input));\n      setValidated(false);\n      event.target.reset();\n    }\n  };\n\n  return (\n    <section className=\"container\">\n      <div id=\"roman\" className=\"d-flex flex-column min-vh-100 align-items-center justify-content-center bg-light text-center\">\n        <CardDeck>\n          <Card>\n            <Card.Body>\n              <Card.Title>What is a Roman Numeral?</Card.Title>\n              <Card.Text>\n                Roman numerals are a numeral system that originated in ancient\n                Rome and remained the usual way of writing numbers throughout\n                Europe well into the Late Middle Ages.\n              </Card.Text>\n              <a\n                href=\"https://en.wikipedia.org/wiki/Roman_numerals\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Button variant=\"primary\">Roman Numberals - Wikipedia</Button>\n              </a>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n\n        <Form\n          className=\"w-100\"\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n        >\n          <Form.Group className=\"align-items-center\">\n            <Form.Label className=\"h4 px-2\">Roman Numeral Converter</Form.Label>\n            <Form.Control\n              required\n              type=\"number\"\n              placeholder=\"Enter number to convert\"\n              onChange={handleInputChange}\n              className=\"my-3 mx-auto w-75 text-center\"\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter at least one number.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\" className=\"mb-4\">\n            Submit\n          </Button>\n          {!submitted ? null : submitted ? (\n            <h4 className=\"text-success\">\n              {inputCopy} = {romans}\n            </h4>\n          ) : null}\n        </Form>\n      </div>\n    </section>\n  );\n};\n\nexport default RomanNumberals;\n","// https://reactjs.org/docs/hooks-state.html\nimport React, { useState } from \"react\";\n// https://react-bootstrap.github.io/layout/grid/#container\nimport { Card, CardDeck, Form, Button } from \"react-bootstrap\";\n\nconst Rot13 = () => {\n  const [input, setInput] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [submitted, setSubmit] = useState(false);\n  const [inputCopy, setInputCopy] = useState(\"\");\n  const [encoded, encode] = useState(\"\");\n\n  const rot13 = (str) => {\n    return (str + \"\").replace(/[a-zA-Z]/gi, function (s) {\n      return String.fromCharCode(\n        s.charCodeAt(0) + (s.toLowerCase() < \"n\" ? 13 : -13)\n      );\n    });\n  };\n\n  const handleInputChange = (event) => setInput(event.target.value);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n    if (form.checkValidity()) {\n      event.preventDefault();\n      setSubmit(true);\n      setInputCopy(input);\n      encode(rot13(input));\n      setValidated(false);\n      event.target.reset();\n    }\n  };\n\n  return (\n    <section className=\"container\">\n      <div id=\"rot13\" className=\"d-flex flex-column min-vh-100 align-items-center justify-content-center bg-light text-center\">\n        <CardDeck>\n          <Card>\n            <Card.Body>\n              <Card.Title>What is ROT13?</Card.Title>\n              <Card.Text>\n                ROT13 (\"rotate by 13 places\", sometimes hyphenated ROT-13) is a\n                simple letter substitution cipher that replaces a letter with\n                the 13th letter after it, in the alphabet. ROT13 is a special\n                case of the Caesar cipher which was developed in ancient Rome.\n              </Card.Text>\n              <a\n                href=\"https://en.wikipedia.org/wiki/ROT13\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Button variant=\"primary\">ROT13 - Wikipedia</Button>\n              </a>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n\n        <Form\n          className=\"w-100\"\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n        >\n          <Form.Group className=\"align-items-center\">\n            <Form.Label className=\"h4\">ROT13 Encoder</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              pattern=\"[\\D ]+\"\n              placeholder=\"Enter text only to convert\"\n              onChange={handleInputChange}\n              className=\"my-3 mx-auto w-75 text-center\"\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter at least one character (text only).\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\" className=\"mb-4\">\n            Submit\n          </Button>\n          {!submitted ? null : submitted ? (\n            <h4 className=\"text-success\">\n              {inputCopy} = {encoded}\n            </h4>\n          ) : null}\n        </Form>\n      </div>\n    </section>\n  );\n};\n\nexport default Rot13;\n","// https://reactjs.org/docs/hooks-state.html\nimport React, { useState } from \"react\";\n// https://react-bootstrap.github.io/layout/grid/#container\nimport { Card, CardDeck, Form, Button } from \"react-bootstrap\";\n\nconst ValidPhoneNumber = () => {\n  const [input, setInput] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [submitted, setSubmit] = useState(false);\n  const [inputCopy, setInputCopy] = useState(\"\");\n  const [phoneCheck, setPhoneCheck] = useState(\"\");\n\n  const telephoneCheck = (str) => {\n    // eslint-disable-next-line\n    let regex = /^(1\\s?)?(\\(\\d{3}\\)|\\d{3})[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$/;\n    return regex.test(str);\n  };\n\n  const handleInputChange = (event) => setInput(event.target.value);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n    if (form.checkValidity()) {\n      event.preventDefault();\n      setSubmit(true);\n      setInputCopy(input);\n      setPhoneCheck(telephoneCheck(input));\n      setValidated(false);\n      event.target.reset();\n    }\n  };\n\n  return (\n    <section className=\"container\">\n      <div id=\"phone\" className=\"d-flex flex-column min-vh-100 align-items-center justify-content-center bg-light text-center\">\n        <CardDeck>\n          <Card>\n            <Card.Body>\n              <Card.Title>What is NANP?</Card.Title>\n              <Card.Text>\n                The North American Numbering Plan (NANP) is a telephone\n                numbering plan for World Zone 1, which comprises twenty-five\n                distinct regions in twenty countries primarily in North America,\n                including the Caribbean. Some North American countries, most\n                notably Mexico, do not participate in the NANP.\n              </Card.Text>\n              <a\n                href=\"https://en.wikipedia.org/wiki/North_American_Numbering_Plan\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Button variant=\"primary\">NANP - Wikipedia</Button>\n              </a>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n\n        <Form\n          className=\"w-100\"\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n        >\n          <Form.Group className=\"align-items-center\">\n            <Form.Label className=\"h4\">\n              Is it a valid US phone number format?\n            </Form.Label>\n            <Form.Control\n              required\n              type=\"tel\"\n              placeholder=\"Enter phone number to check\"\n              onChange={handleInputChange}\n              className=\"my-3 mx-auto w-75 text-center\"\n            />\n            <Form.Control.Feedback className=\"px-1\" type=\"invalid\">\n              Please enter a valid phone number (example 5555555555 or\n              555-555-5555).\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\" className=\"mb-4\">\n            Submit\n          </Button>\n          {!submitted ? null : submitted && !phoneCheck ? (\n            <h4 className=\"text-danger px-1\">\n              {inputCopy} is not a valid US phone number.\n            </h4>\n          ) : (\n            <h4 className=\"text-success px-1\">\n              {inputCopy} is a valid US phone number.\n            </h4>\n          )}\n        </Form>\n      </div>\n    </section>\n  );\n};\n\nexport default ValidPhoneNumber;\n","// https://reactjs.org/docs/hooks-state.html\nimport React, { useState } from \"react\";\n// https://react-bootstrap.github.io/layout/grid/#container\nimport { Table, Form, Button } from \"react-bootstrap\";\n\nconst CashRegister = () => {\n  const [input, setInput] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [submitted, setSubmit] = useState(false);\n  const [response, setResponse] = useState({});\n\n  const register = [\n    [\"PENNYS\", 1.01],\n    [\"NICKELS\", 2.05],\n    [\"DIMES\", 3.1],\n    [\"QUARTERS\", 4.25],\n    [\"ONES\", 90],\n    [\"FIVES\", 55],\n    [\"TENS\", 20],\n    [\"TWENTYS\", 60],\n    [\"HUNDREDS\", 100],\n  ];\n\n  const denom = [\n    { name: \"HUNDREDS\", val: 100.0 },\n    { name: \"TWENTYS\", val: 20.0 },\n    { name: \"TENS\", val: 10.0 },\n    { name: \"FIVES\", val: 5.0 },\n    { name: \"ONES\", val: 1.0 },\n    { name: \"QUARTERS\", val: 0.25 },\n    { name: \"DIMES\", val: 0.1 },\n    { name: \"NICKELS\", val: 0.05 },\n    { name: \"PENNYS\", val: 0.01 },\n  ];\n\n  const checkCashRegister = (price, cash, cid) => {\n    let output = { status: null, change: [] };\n    let change = cash - price;\n\n    // Transform CID array into drawer object\n    let register = cid.reduce(\n      function (acc, curr) {\n        acc.total += curr[1];\n        acc[curr[0]] = curr[1];\n        return acc;\n      },\n      { total: 0 }\n    );\n\n    // Handle exact change\n    if (change === 0) {\n      output.status = \"CLOSED\";\n      output.change = [];\n      return output;\n    }\n\n    // Handle obvious insufficient funds\n    if (register.total < change) {\n      output.status = \"INSUFFICIENT FUNDS\";\n      return output;\n    }\n\n    // Loop through the denomination array\n    let change_arr = denom.reduce((acc, curr) => {\n      let value = 0;\n      // While there is still money of this type in the drawer\n      // And while the denomination is larger than the change remaining\n      while (register[curr.name] > 0 && change >= curr.val) {\n        change -= curr.val;\n        register[curr.name] -= curr.val;\n        value += curr.val;\n\n        // Round change to the nearest hundreth deals with precision errors\n        change = Math.round(change * 100) / 100;\n      }\n      // Add this denomination to the output only if any was used.\n      if (value > 0) {\n        acc.push([curr.name, value]);\n      }\n      return acc; // Return the current change_arr\n    }, []); // Initial value of empty array for reduce\n\n    // If there are no elements in change_arr or we have leftover change, return\n    // the string \"Insufficient Funds\"\n    if (change_arr.length < 1 || change > 0) {\n      output.status = \"INSUFFICIENT FUNDS\";\n      return output;\n    }\n\n    // Here is your change, ma'am.\n    output.status = \"OPEN\";\n    output.change = change_arr;\n    return output;\n  };\n\n  const handleInputChange = (event) => setInput(event.target.value);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n    if (form.checkValidity()) {\n      event.preventDefault();\n      setSubmit(true);\n      setResponse(checkCashRegister(5, input, register));\n      setValidated(false);\n      event.target.reset();\n    }\n  };\n\n  return (\n    <section className=\"container\">\n      <div id=\"register\" className=\"d-flex flex-column min-vh-100 align-items-center justify-content-center bg-light text-center\">\n        <div className=\"container\">\n          <Table responsive variant=\"dark\">\n            <thead>\n              <tr>\n                <th>Cash Register</th>\n                {register.map((item, id1) => (\n                  <td key={id1}>{item[0]}</td>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Amount</td>\n                {register.map((item, id2) => (\n                  <td key={id2}>{item[1]}</td>\n                ))}\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n\n        <Form\n          className=\"w-100\"\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n        >\n          <Form.Group className=\"align-items-center\">\n            <Form.Label className=\"h4\">\n              What is my change for a $5.00 purchase?\n            </Form.Label>\n            <Form.Control\n              required\n              type=\"number\"\n              step=\"0.01\"\n              placeholder=\"Enter payment amount\"\n              onChange={handleInputChange}\n              className=\"my-3 mx-auto w-75 text-center\"\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid amount (example - 10.00).\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\" className=\"mb-4\">\n            Submit\n          </Button>\n          {!submitted ? null : submitted &&\n            response.status !== \"INSUFFICIENT FUNDS\" ? (\n            <div className=\"container\">\n              <ul className=\"list-group\">\n                {response.change.map((item, id) => (\n                  <li key={id} className=\"list-group-item text-success\">\n                    ${item[1]}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            <h4 className=\"text-danger\">Insufficient Funds</h4>\n          )}\n        </Form>\n      </div>\n    </section>\n  );\n};\n\nexport default CashRegister;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <h1 className=\"d-flex flex-column min-vh-100 justify-content-center text-center text-white\">\n      Sorry, page not found.\n    </h1>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\n// https://reactrouter.com/web/guides/quick-start\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Palindrome from \"../pages/Palindrome\";\nimport RomanNumerals from \"../pages/RomanNumerals\";\nimport Rot13 from \"../pages/Rot13\";\nimport ValidPhoneNumber from \"../pages/ValidPhoneNumber\";\nimport CashRegister from \"../pages/CashRegister\";\nimport NotFound from \"../pages/NotFound\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/Palindrome-Checker\">\n        <Palindrome />\n      </Route>\n      <Route exact path=\"/Roman-Numeral-Converter\">\n        <RomanNumerals />\n      </Route>\n      <Route exact path=\"/ROT13\">\n        <Rot13 />\n      </Route>\n      <Route exact path=\"/Valid-Phone-Number\">\n        <ValidPhoneNumber />\n      </Route>\n      <Route exact path=\"/Cash-Register\">\n        <CashRegister />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\n// https://react-icons.netlify.com/#/\nimport { FaLinkedin, FaGithubSquare, FaFreeCodeCamp } from \"react-icons/fa\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"d-flex flex-column fixed-bottom align-items-center bg-primary\">\n      <div className=\"h1 d-inline my-2\">\n        <a\n          href=\"https://www.linkedin.com/in/michael-huber-9b567a173\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-white\"\n        >\n          <FaLinkedin />\n        </a>\n        <a\n          href=\"https://www.freecodecamp.org/mshuber1981\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"mx-5 text-white\"\n        >\n          <FaFreeCodeCamp />\n        </a>\n        <a\n          href=\"https://github.com/mshuber1981\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-white\"\n        >\n          <FaGithubSquare />\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Routes from \"./components/Routes\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <>\n      <NavBar />\n      <main className=\"bg-secondary\">\n        <Routes />\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// https://reactrouter.com/web/guides/quick-start (using HashRouter so custom 404 will work with GitHub Pages)\nimport { HashRouter as Router } from \"react-router-dom\";\n// https://getbootstrap.com/docs/4.5/getting-started/introduction/\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}